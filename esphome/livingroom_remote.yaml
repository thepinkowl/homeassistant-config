esphome:
  name: livingroom_remote
  platform: ESP32
  board: nodemcu-32s
  includes:
    - NECAction.h
    - SamsungAction.h
    - rgb_ir_light.h
    #- vivax_ir_climate.h

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password

# Enable logging
logger:

# Enable Home Assistant API
api:

ota:

remote_receiver:
  pin:
    number: GPIO14
    inverted: True
  dump:
    - lg
    - nec
    - panasonic
    - jvc
    - samsung
    - sony
    - rc5
  
remote_transmitter:
  pin: GPIO4
  carrier_duty_percent: 50%

switch:
  - platform: template
    name: LED ON
    turn_on_action:
      - remote_transmitter.transmit_nec:
          address: 0x00FF
          command: 0xE01F
    turn_off_action:
      - remote_transmitter.transmit_nec:
          address: 0x00FF
          command: 0x609F

  - platform: template
    name: Climate on test
    turn_on_action:
      - remote_transmitter.transmit_samsung:
          data: 0xA18849FF
    turn_off_action:
      - remote_transmitter.transmit_samsung:
          data: 0xA10849FF

  - platform: template
    name: Bobby
    turn_on_action:
      - remote_transmitter.transmit_samsung:
          data: 0x818110EF
  - platform: template
    name: Bobby home
    turn_on_action:
      - remote_transmitter.transmit_samsung:
          data: 0x8181807F
  - platform: template
    name: Bobby spot
    turn_on_action:
      - remote_transmitter.transmit_samsung:
          data: 0x8181C03F
          


light:
- platform: custom
  lambda: |-
    auto light_out = new RGBInfraredLightOutput(remote_transmitter_remotetransmittercomponent);
    App.register_component(light_out);
    return {light_out};

  lights:
    - name: "TV Backlight"
    
#climate:
#  - platform: custom
#    lambda: |-
#      auto vivax_climate = new VivaxInfraredClimate(remote_transmitter_remotetransmittercomponent);
#      App.register_component(vivax_climate);
#      return {vivax_climate};
#    climates:
#      - name: "Vivax Climate"
